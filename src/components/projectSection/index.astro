---
import Title from "./Title.astro";
import Body from "./Body.astro";

interface Props {
  title: string;
  herosrc: ImageMetadata;
  repo: string;
  live: string;
  side: "left" | "right";
  description: string;
  stack: {iconName: string; text: string, href: string; width?: number; height?: number}[];
}

const { herosrc, repo, live, side, title, description, stack } = Astro.props;
---
<script>
const observer = new IntersectionObserver((entries) => {
  entries.forEach((entry) => {
    if (entry.isIntersecting) {
      entry.target.classList.add("show");
      entry.target.classList.remove("hide");
    }
  });
});

document.querySelectorAll("section").forEach((it) => { observer.observe(it); });
</script>

<section class={`hide ${side}`}>
  <Title title={title} />
  <Body side={side} herosrc={herosrc} repo={repo} live={live} title={title} description={description} stack={stack} />
</section>

<style>
  section {
    height: 100vh;
    width: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;

    transition: all 1.5s ease-in-out;
    overflow-x: hidden;

    scroll-snap-align: start;

    @media (min-width: 320px) {
      gap: 1rem;
      padding: 1rem;
      padding-bottom: 3rem;
    }
    @media (min-width: 640px) {
      gap: 2rem;
      padding: 1rem;
      padding-bottom: 4rem;
    }
    @media (min-width: 1024px) {
      gap: 1rem;
      padding-inline: 3rem;
      padding-block: 3.5rem;
    }
  }

  .hide {
    opacity: 0;
    filter: blur(10px);
  }
  .left {
    transform: translateX(-90%);
  }
  .right {
    transform: translateX(90%);
  }
  .show {
    opacity:1;
    filter: blur(0);
    transform: translateX(0);
  }
</style>

